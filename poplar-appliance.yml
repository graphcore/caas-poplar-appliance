---
- name: Populate inventory with VIPU server
  hosts: localhost
  tasks:
    - name: Install openstack cli
      ansible.builtin.pip:
        name: python-openstackclient

    - name: Get openstack user name
      ansible.builtin.shell:
        cmd: /home/runner/.local/bin/openstack user show "$(/home/runner/.local/bin/openstack token issue -f value -c user_id)" -f value -c name
      register: openstack_cli_out
      # Can we do something here with the "environment" property to set a PATH
      # that includes /home/runner/.local/bin. Or, even better determine the
      # install location and add that to PATH

    - name: Debug openstack cli
      ansible.builtin.debug:
        var: openstack_cli_out

    - name: Set user name
      ansible.builtin.set_fact:
        appliance_user: "{{ openstack_cli_out.stdout | default( 'ipuuser') }}"

    - name: Add to inventory
      ansible.builtin.add_host:
        name: vipu_ctrl
        ansible_host: 10.129.110.13
        ansible_user: ipuuser
        groups: vipu_server
        allocation_name: "{{appliance_user}}-{{cluster_name}}"
#        partition_name: "{{appliance_user}}-{{cluster_name}}-reconfig"
        appliance_user: "{{ appliance_user }}"

- name: (De-)Configure vipu server
  hosts: vipu_ctrl
  vars:
    terraform_state: "{{ cluster_state | default('present') }}"
  tasks:
    - name: Include poplar infra role
      ansible.builtin.include_role:
        name: poplar_infra
        tasks_from: "{{ terraform_state }}.yml"

- name: Provision infrastructure
  hosts: openstack
  roles:
    - cluster_infra
  vars:
    allocation_name: "{{hostvars['vipu_ctrl']['allocation_name'] | default('none')}}"
    partition_name: "{{hostvars['vipu_ctrl']['partition_name'] | default('none')}}"
  post_tasks:
    - name: Wait for Monitoring to become available
      uri:
        url: "http://{{ zenith_fqdn_monitoring }}"
        method: GET
        follow_redirects: safe
      register: monitoring_uri
      changed_when: false
      failed_when: >-
        monitoring_uri.status < 0 or
        monitoring_uri.status == 404 or
        monitoring_uri.status >= 500
      retries: 60
      delay: 10
      # 404 and 503 are the statuses that are seen when the Zenith service is not ready yet
      # An SSL error is indicated as -1, which will occur while cert-manager fetches certificates
      until: monitoring_uri.status not in [404, 503, -1]
      when: (cluster_state | default('present')) == 'present'
      tags: never

    - name: Wait for webconsole to become available
      uri:
        url: "http://{{ zenith_fqdn_webconsole }}"
        method: GET
        follow_redirects: safe
      register: webconsole_uri
      changed_when: false
      failed_when: >-
        webconsole_uri.status < 0 or
        webconsole_uri.status == 404 or
        webconsole_uri.status >= 500
      retries: 60
      delay: 10
      # 404 and 503 are the statuses that are seen when the Zenith service is not ready yet
      # An SSL error is indicated as -1, which will occur while cert-manager fetches certificates
      until: webconsole_uri.status not in [404, 503, -1]
      when: (cluster_state | default('present')) == 'present'
      tags: never


- hosts: localhost
  tasks:
    - name: debug inventory
      debug: var=hostvars

# Write the outputs as the final task
- hosts: localhost
  tasks:
    - debug: var=outputs
      vars:
        outputs:
          cluster_access_ip: "{{ hostvars[groups['openstack'][0]].cluster_access_ip }}"
          cluster_user: "{{ hostvars[groups['openstack'][0]].cluster_user }}"
          cluster_flavour_name: "{{ hostvars[groups['openstack'][0]].cluster_flavour_name }}"
          allocation_name: "{{ hostvars['vipu_ctrl'].allocation_name }}"
          allocation_size: "{{ hostvars['vipu_ctrl'].allocation_size }}"
          ipuof_vipu_api_partition_id: "{{ hostvars['vipu_ctrl'].partition_name | default('none') }}"
          ipuof_vipu_api_host: "{{ hostvars['vipu_ctrl'].vipu_ipaddr }}"
