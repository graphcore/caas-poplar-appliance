---
- name: Populate inventory with VIPU server
  hosts: localhost
  tasks:
    - name: Install openstack cli
      ansible.builtin.pip:
        name: python-openstackclient

    - name: Get openstack user name
      ansible.builtin.command:
        cmd:  /home/runner/.local/bin/openstack user show "$(openstack token issue -f value -c user_id)" -f value -c name
      register: openstack_cli_out

    - name: Debug openstack cli
      ansible.builtin.debug:
        var: openstack_cli_out

    - name: Set user name
      ansible.builtin.set_fact:
        appliance_user: "{{ openstack_cli_out.stdout | default( 'ipuuser') }}"

    - name: Add to inventory
      ansible.builtin.add_host:
        name: vipu_ctrl
        ansible_host: 10.129.110.13
        ansible_user: ipuuser
        groups: vipu_server
        allocation_name: "{{appliance_user}}-alloc"
        appliance_user: "{{ appliance_user }}"

- name: Configure vipu server
  hosts: vipu_ctrl
  vars:
    terraform_state: "{{ cluster_state | default('present') }}"
  tasks:
    - name: Block for allocation configuration
      block:
        - name: Debug vipu server
          ansible.builtin.debug:
            var: ansible_facts
          ignore_unreachable: yes

        - name: Can we get an allocation of requested size?
          ansible.builtin.command:
            cmd: vipu-admin --showjson create allocation --options --size {{allocation_size}}
          ignore_errors: yes
          register: vipu_alloc_opt

        - name: Debug allocation test
          ansible.builtin.debug:
            var: vipu_alloc_opt

        - name: Do we have any options
          ansible.builtin.fail:
            msg: No allocations of size {{allocation_size}} available
          when:
            - vipu_alloc_opt.rc != 0
            - '"no free allocation" in vipu_alloc_opt.stdout'

        - name: Create allocation
          ansible.builtin.command:
            cmd: vipu-admin --showjson create allocation {{allocation_name}} --size {{allocation_size}}
          register: vipu_alloc_mk

        - name: Debug vipu-admin output
          ansible.builtin.debug:
            var: vipu_alloc_mk
          when:
            - vipu_alloc_mk is defined

        - name: List allocation
          ansible.builtin.command:
            cmd: vipu-admin --showjson list allocations
          register: vipu_alloc_list

        - name: Debug vipu-admin list
          ansible.builtin.debug:
            var: vipu_alloc_list
          when:
            - vipu_alloc_list is defined
      when:
        - terraform_state == "present"
      # End block

- name: Provision infrastructure
  hosts: openstack
  roles:
    - cluster_infra
  vars:
    allocation_name: "{{hostvars['vipu_ctrl']['allocation_name']}}"
  post_tasks:
    - name: Wait for Monitoring to become available
      uri:
        url: "http://{{ zenith_fqdn_monitoring }}"
        method: GET
        follow_redirects: safe
      register: monitoring_uri
      changed_when: false
      failed_when: >-
        monitoring_uri.status < 0 or
        monitoring_uri.status == 404 or
        monitoring_uri.status >= 500
      retries: 60
      delay: 10
      # 404 and 503 are the statuses that are seen when the Zenith service is not ready yet
      # An SSL error is indicated as -1, which will occur while cert-manager fetches certificates
      until: monitoring_uri.status not in [404, 503, -1]
      when: (cluster_state | default('present')) == 'present'
      tags: never

    - name: Wait for webconsole to become available
      uri:
        url: "http://{{ zenith_fqdn_webconsole }}"
        method: GET
        follow_redirects: safe
      register: webconsole_uri
      changed_when: false
      failed_when: >-
        webconsole_uri.status < 0 or
        webconsole_uri.status == 404 or
        webconsole_uri.status >= 500
      retries: 60
      delay: 10
      # 404 and 503 are the statuses that are seen when the Zenith service is not ready yet
      # An SSL error is indicated as -1, which will occur while cert-manager fetches certificates
      until: webconsole_uri.status not in [404, 503, -1]
      when: (cluster_state | default('present')) == 'present'
      tags: never
