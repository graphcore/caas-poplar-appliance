---
# This task list deconfigures partitions, allocations and IPUMs when the Poplar
# Appliance is torn down (terraform_state == absent)
- name: Copy clouds.yaml file
  ansible.builtin.copy:
    decrypt: yes
    src: "{{playbook_dir}}/files/clouds.yaml"
    dest: ~/.config/openstack/

# This is flakey, if allocation_name isn't known it throws an error so we
# check the error condition before trying to execute the following block.
- name: List partitions in our allocation (only)
  ansible.builtin.command:
    cmd: /opt/gc/vipu-{{vipu_ver}}/vipu-admin  -H {{ vipu_servers[appliance_tenancy]['floating_ip'] }} -P 8091 list partitions --allocation {{allocation_name}} --showjson
  register: vipu_partition_out
  ignore_errors: true

- name: Partition removal block
  block:
    - name: Convert partition_out to list
      ansible.builtin.set_fact:
        vipu_partition_list: "{{ vipu_partition_out.stdout | from_json | community.general.json_query('partitions[*].id') | list }}"

    - name: Debug partitions in our allocation
      ansible.builtin.debug:
        var: item
      loop: "{{ vipu_partition_list if vipu_partition_list else [] }}"
      tags: [ debug, never ]

    - name: Remove partitions in our allocation
      ansible.builtin.command:
        cmd: /opt/gc/vipu-{{vipu_ver}}/vipu-admin  -H {{ vipu_servers[appliance_tenancy]['floating_ip'] }} -P 8091 remove partition {{ item }} --force
      loop: "{{ vipu_partition_list if vipu_partition_list else [] }}"
      register: partition_remove_out

      # Should really test that the partitions were removed
      # If there were multiple partitions, partition_remove_out will contain
      # a list(?) of outputs, one per partition. Each of those should have an rc
      # value, and a stdout containing:
      #
      # ipuuser@cl2-pod001-1-ctrl:~$ vipu-admin remove partition jameso-4
      # Please be patient. This operation can take several seconds
      # ............
      # remove partition (jameso-4): success.
  # End block
  when: vipu_partition_out.rc == 0

- name: List allocation - the return code shows if the expected alloc exists
  ansible.builtin.command:
    cmd: /opt/gc/vipu-{{vipu_ver}}/vipu-admin -H {{ vipu_servers[appliance_tenancy]['floating_ip'] }} -P 8091 --showjson get allocation {{allocation_name}}
  register: vipu_alloc_list
  ignore_errors: true

- name: Remove allocation block
  block:
    - name: List assigned IPUMs cos we need it for the truffle-shuffle
      ansible.builtin.set_fact:
        assigned_ipums_list: "{{ vipu_alloc_list.stdout | from_json |  moreati.jq.jq('.allocation.spec.agent_ids') }}"

    - name: Debug allocation list
      ansible.builtin.debug:
        msg: "Clean up allocation list: {{assigned_ipums_list}}"
      tags: [ debug, never ]

    - name: Remove allocation
      ansible.builtin.command:
        cmd: /opt/gc/vipu-{{vipu_ver}}/vipu-admin  -H {{ vipu_servers[appliance_tenancy]['floating_ip'] }} -P 8091 remove allocation {{ allocation_name }}
      register: allocation_remove_out
      #when: vipu_alloc_json.allocation | json_query('[?contains(id, `' + allocation_name + '`)]') | length > 0

  # End block cleaning up allocations
  when: vipu_alloc_list.rc == 0

##
# Remove the IPUMs in assigned_ipums_list from the user's vpod
- name: Shuffle IPUMs back to staging
  ansible.builtin.import_tasks: truffleshuffle.yml

- name: Remove clouds.yaml file so next play runs as the Azimuth user
  ansible.builtin.file:
    state: absent
    path: ~/.config/openstack/clouds.yaml
